You may want to use a remote repository if you won't be on the same device when trying to work on the project.  Or this may also allow
others to take a look at the repository as well.

A mistake may occur in which case an auto pull would be problematic.

A fork splits a repository from the original and keeps the "fork" on the new user's account so they can use it in different ways.  Cloning takes the original file or fork and makes an exact copy of it which shows previous commits.  A branch is making a new path off of the master where changes can be made.  It keeps it separate from the master so it helps with organization and gives more of a chance to experiment with different changes.

It helps to know what the status of the remote is.  That wasy changes made locally can be further organized to not have any conflicts with the remote.

Without Git or GitHub, you could collaborate through sending copies of files via email, text, etc.  They could also simply be shared or instructed in person.  With Git or GitHub the collaboration is much more seamless and has things built in to note what has or hasn't been changed or initiated.  Git/GitHub is more complex and can share more things, so it's not quite as easy but it does a lot more for you.  So the simple transfer of info would be easier but there would be a lot lost with simply using something like email/text.

You may want to make a change in a separate branch when trying out a feature.  It helps to keep changes that could end up negative outside of the master branch itself.  It gives room for experimentation or helps to further organize things.  A simple change to the master may be fine, but anything very severe may be best done on its own branch.